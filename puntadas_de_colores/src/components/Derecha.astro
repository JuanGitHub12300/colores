---
import ArrowNext from "./icons/ArrowNext.astro";
import ArrowPrevious from "./icons/ArrowPrevious.astro";

const images = [
  "Img.webp",
  "Img3.webp",
  "Img5.webp",
  "Img6.webp",
  "Img8.webp",
  "Img9.webp",
  "Img10.webp",
  "Img15.webp",
];
let currentIndex = 0;
---

<div class="carousel-container w-full md:w-4/12 px-4 mr-auto ml-auto">
  <div
    class="carousel relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-pink-600 overflow-hidden"
  >
    <div class="carousel-image-container relative w-full h-64 md:h-96 overflow-hidden">
      {images.map((image, index) => (
        <img
          src={image}
          alt="Carousel image"
          class={`carousel-image absolute w-full h-full object-cover align-middle rounded-t-lg ${index === 0 ? 'active' : ''}`}
          style={`transform: translateX(${index * 100}%);`}
        />
      ))}
    </div>
    <blockquote class="relative p-8 mb-4">
      <svg
        preserveAspectRatio="none"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 583 95"
        class="absolute left-0 w-full block"
        style="height: 95px; top: -94px;"
      >
        <polygon
          points="-30,95 583,95 583,65"
          class="text-pink-600 fill-current"></polygon>
      </svg>
      <h4 class="text-xl font-bold text-white mt-2">
        Ofrecemos a nuestros clientes
      </h4>
      <p class="text-md font-light mt-2 text-white">
        Vestidos de gala, ropa deportiva, blusas, atuendo formales.
      </p>
    </blockquote>
    <!-- Controles del carrusel -->
    <div class="flex justify-between p-4">
      <button
        onclick="previousImage()"
        class="absolute top-1/2 left-0 transform -translate-y-1/2 bg-white text-pink-600 px-4 ml-2 py-2 rounded"
        aria-label="Previous image"
      >
        <ArrowPrevious />
      </button>
      <button
        onclick="nextImage()"
        class="absolute top-1/2 right-0 transform -translate-y-1/2 bg-white text-pink-600 px-4 py-2 mr-2 rounded"
        aria-label="Next image"
      >
        <ArrowNext />
      </button>
    </div>
  </div>
</div>

<script is:inline>
  const images = document.querySelectorAll('.carousel-image');
  let currentIndex = 0;

  function updateActiveImage(newIndex) {
    images[currentIndex].classList.remove('active', 'fade-in');
    images[currentIndex].classList.add('hidden'); // Oculta la imagen anterior

    images[newIndex].classList.remove('hidden'); // Muestra la nueva imagen
    images[newIndex].classList.add('active', 'fade-in');
    currentIndex = newIndex;
  }

  function nextImage() {
    const newIndex = (currentIndex + 1) % images.length;
    updateActiveImage(newIndex);
  }

  function previousImage() {
    const newIndex = (currentIndex - 1 + images.length) % images.length;
    updateActiveImage(newIndex);
  }

  // Añade observador para carga diferida de imágenes cuando aparecen en pantalla
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('loaded');
      }
    });
  }, { threshold: 0.5 });

  images.forEach(image => observer.observe(image));
</script>

<style>
  .carousel-container {
    overflow: hidden;
  }

  .carousel-image-container {
    position: relative;
  }

  .carousel-image {
    transition: opacity 0.1s ease, transform 0.1s ease;
    opacity: 0;
    display: none; /* Ocultamos la imagen por defecto */
  }

  .carousel-image.active {
    display: block; /* Solo la imagen activa se muestra */
    opacity: 1;
    transform: translateX(0);
  }

  .carousel-image.fade-in {
    animation: fadeIn 0.6s ease forwards;
  }

  @keyframes fadeIn {
    0% { opacity: 0; transform: scale(0.95); }
    100% { opacity: 1; transform: scale(1); }
  }

  .carousel-image.loaded {
    opacity: 1;
    transition: opacity 0.1s ease;
  }
</style>
